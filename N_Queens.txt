#include <bits/stdc++.h>
using namespace std;

void solve(int col, int n, vector<vector<string>> &ans, vector<string> &board, vector<int> &left, vector<int> &upperDiag, vector<int> &lowerDiag)
{
	if(col>=n)
	{
		ans.push_back(board);
		return;
	}
	for(int row=0;row<n;row++)
	{
		if(left[row]==0 && upperDiag[n-1+row-col]==0 && lowerDiag[row+col]==0)
		{
			board[row][col]='Q';
			left[row]=1;
			upperDiag[n-1+row-col]=1;
			lowerDiag[row+col]=1;
			solve(col+1,n,ans,board,left,upperDiag,lowerDiag);
			left[row]=0;
			upperDiag[n-1+row-col]=0;
			lowerDiag[row+col]=0;
			board[row][col]='.';
		}
	}
}


void show(int n, vector<string> &board)
{
	for(int i=0;i<n;i++)
	{
		cout<<board[i]<<endl;
	}
	cout<<endl;
}
int main() {
	int n;
	cout<<"Enter dimension value: "<<endl;
	cin>>n;
	vector<vector<string>> ans;
	vector<string> board(n);
	string s(n,'.');
	for(int i=0;i<n;i++)
	{
		board[i]=s;
	}
	vector<int> left(n,0);
	vector<int> upperDiag(2*n-1,0);
	vector<int> lowerDiag(2*n-1,0);
	show(n,board);
	solve(0,n,ans,board,left,upperDiag,lowerDiag);
	for(int i=0;i<ans.size();i++)
	{
		show(n,ans[i]);
		cout<<"---------------"<<endl;
	}
	return 0;
}